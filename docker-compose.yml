version: '3.8'

services:
  # ----------------------------------------------------
  # Redisサービス（Celeryのブローカーとして使用）
  # ----------------------------------------------------
  redis: # <--- 追加
    image: "redis:7-alpine"
    restart: always

  # ----------------------------------------------------
  # PostgreSQLデータベースサービス
  # ----------------------------------------------------
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=my_db
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=Pass1234
      - TZ=UTC
    ports:
      - "5432:5432"
    command: postgres -c TimeZone=UTC -c log_timezone=UTC
    restart: always

  # ----------------------------------------------------
  # Djangoウェブアプリケーションサービス
  # ----------------------------------------------------
  web:
    build: .
    env_file:
      - .env
    command: gunicorn --forwarded-allow-ips="*" mysite.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgres://my_user:Pass1234@db:5432/my_db?options=-c%20TimeZone%3DUTC
      - TZ=UTC
    depends_on:
      - db
      - redis # <--- 追加: Redisが起動してからwebが起動するようにする
    restart: always

  # ----------------------------------------------------
  # Celeryワーカーサービス（非同期タスクを実行）
  # ----------------------------------------------------
  celery_worker: # <--- 追加
    build: .
    command: celery -A mysite worker --loglevel=info # 'mysite' はあなたのDjangoプロジェクト名
    volumes:
      - .:/app
    environment: # <--- 追加: webサービスと同じ環境変数を渡す
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgres://my_user:Pass1234@db:5432/my_db?options=-c%20TimeZone%3DUTC
      - TZ=UTC
    env_file: # <--- 追加: .envファイルも読み込む
      - .env
    depends_on: # <--- 追加: web, db, redisが起動してからcelery_workerが起動
      - web
      - db
      - redis
    restart: always

volumes:
  postgres_data:
  # staticfiles:
  media: